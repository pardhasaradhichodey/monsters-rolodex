{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAEaA,G,MAAO,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACtB,4BAAML,EAAMI,QAAQE,MACpB,2BAAKN,EAAMI,QAAQG,UCDdC,G,MAAW,SAACR,GACrB,OACI,yBAAKC,UAAU,aACdD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCP/BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCHG,G,wDApCf,aAAc,IAAD,8BACX,gBAWFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAKvC,WACE,MAA6BC,KAAKN,MAA3Bd,EAAP,EAAOA,SAASW,EAAhB,EAAgBA,YACVU,EAAiBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC1CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAEpD,OACE,yBAAK/B,UAAU,OACb,gDACA,kBAAC,EAAD,CACEY,YAAY,kBACZC,aAAce,KAAKf,eAErB,kBAAC,EAAD,CAAUL,SAAUqB,S,GA5BRI,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e12f0236.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${ props.monster.id }?set=set2&size=180x180`}/>\r\n        <h2>{ props.monster.name }</h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'> \r\n        {props.monsters.map(monster=> (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className=\"search\"\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n    />\r\n);","import React,{ Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\nclass App extends Component{\nconstructor(){\n  super();\n  this.state={\n    monsters:[],\n    searchField:''\n  };\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=> response.json())\n  .then(users=>this.setState({monsters:users}));\n}\nhandleChange=(e) => {\n  this.setState({searchField:e.target.value});\n}\nrender(){\n  const {monsters,searchField}=this.state;\n  const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n  return (\n    <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder='Search Monsters' \n        handleChange={this.handleChange} \n      />\n      <CardList monsters={filteredMonsters} >\n      \n      </CardList>\n      \n    </div>\n  )\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}